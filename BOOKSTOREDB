create database BOOKSTORE;
use bookstore;

-- book_language
CREATE TABLE book_language (
language_id INT AUTO_INCREMENT PRIMARY KEY,
language_name VARCHAR(100) NOT NULL
);


-- publisher
CREATE TABLE publisher (
publisher_id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(255) NOT NULL, contact_email VARCHAR(255)
);


-- book
CREATE TABLE book (
book_id INT AUTO_INCREMENT PRIMARY KEY,
title VARCHAR(255) NOT NULL, isbn VARCHAR(20), publication_year YEAR, language_id INT,
publisher_id INT, price DECIMAL(10,2), stock_quantity INT,
FOREIGN KEY (language_id) REFERENCES
book_language(language_id),
FOREIGN KEY (publisher_id) REFERENCES publisher(publisher_id)
);


-- author
CREATE TABLE author (
author_id INT AUTO_INCREMENT PRIMARY KEY,
first_name VARCHAR(100), last_name VARCHAR(100), bio TEXT
);
 
-- book_author
CREATE TABLE book_author (
book_id INT, author_id INT,
PRIMARY KEY (book_id, author_id), FOREIGN KEY (book_id) REFERENCES
book(book_id),
FOREIGN KEY (author_id) REFERENCES author(author_id)
);


-- customer
CREATE TABLE customer (
customer_id INT AUTO_INCREMENT PRIMARY KEY,
first_name VARCHAR(100), last_name VARCHAR(100), email VARCHAR(255), phone VARCHAR(20)
);


-- country
CREATE TABLE country (
country_id INT AUTO_INCREMENT PRIMARY KEY,
country_name VARCHAR(100)
);


-- address_status
CREATE TABLE address_status (
status_id INT AUTO_INCREMENT PRIMARY KEY,
status_name VARCHAR(50)
);


-- address
CREATE TABLE address (
address_id INT AUTO_INCREMENT PRIMARY KEY,
street VARCHAR(255), city VARCHAR(100), zip_code VARCHAR(20), country_id INT,
FOREIGN KEY (country_id) REFERENCES country(country_id)
); 
 

-- customer_address
CREATE TABLE customer_address (
customer_id INT, address_id INT, status_id INT,
PRIMARY KEY (customer_id, address_id), FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
FOREIGN KEY (address_id) REFERENCES address(address_id),
FOREIGN KEY (status_id) REFERENCES address_status(status_id)
);


-- cust_order
CREATE TABLE cust_order (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    customer_id INT,
    shipping_method_id INT,
    order_date DATE,
    total_price DECIMAL(10,2),
    order_status_id INT,
    FOREIGN KEY (customer_id) REFERENCES customer(customer_id),
    FOREIGN KEY (shipping_method_id) REFERENCES shipping_method(shipping_method_id),
    FOREIGN KEY (order_status_id) REFERENCES order_status(order_status_id)
);


-- order_line
CREATE TABLE order_line (
order_line_id INT AUTO_INCREMENT PRIMARY KEY,
order_id INT, book_id INT, quantity INT,
line_total DECIMAL(10,2),
FOREIGN KEY (order_id) REFERENCES cust_order(order_id),
FOREIGN KEY (book_id) REFERENCES book(book_id)
);
 
-- shipping_method
CREATE TABLE shipping_method (
shipping_method_id INT AUTO_INCREMENT PRIMARY KEY,
method_name VARCHAR(100), cost DECIMAL(10,2)
);


-- order_status
CREATE TABLE order_status (
order_status_id INT AUTO_INCREMENT PRIMARY KEY,
status_name VARCHAR(50)
);


-- order_history
CREATE TABLE order_history (
order_history_id INT AUTO_INCREMENT PRIMARY KEY,
order_id INT, status_id INT,
changed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
changed_by VARCHAR(100),
FOREIGN KEY (order_id) REFERENCES cust_order(order_id),
FOREIGN KEY (status_id) REFERENCES order_status(order_status_id)
);
